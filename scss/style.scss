/* apply a natural box layout model to all elements, but allowing components to change */
$clearWhite: rgba(255, 255, 255, .75);

@import
  "global",
  "global-button";


.prompt.app-intro .prompt-inner {
  flex-flow: row;

  img {
    margin-right: 15px;
  }
}

.app-name {
  font-size: 38px;
}

@media all and (min-width: 43.75em) {
  body {
    font-size: 34px;
  }
  .app-name {
    font-size: 46px;
  }
  .button {
    font-size: 34px;
  }
}


.wrapper {
  display: flex;
  flex-flow: column;
  height: 100%;
  position: relative;
  background: #EEECE1 ;
  background-image: url(../img/white_texture.png);
  background-image: url(../img/cream_pixels.png);
  background-image: url(../img/crossword.png);
  background-image: url(../img/fabric_of_squares_gray.png);
  background-image: url(../img/shattered.png);
  background-image: url(../img/straws.png);
  background-image: url(../img/subtle_white_feathers.png);

  .progress-indicators {
    height: 115px;
    position: relative;
    margin: 0 1em;
  }
  .slides {
    flex: 1;
    position: relative;
    height: 100%;

    .slide {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
    }
  }
}

.progress {
  position: absolute;
  width: 100%;
  max-width: 30em;
  left: 50%;
  transform: translateX(-50%);
  transition: 500ms ease-in-out opacity;
  bottom: 0;

  &.count-bar svg {
    width: 100%;
    height: 5px;
  }

  &.count-clock,
  &.count-clock > div {
    height: 86px;
    width: 100%;
    font-size: 28px;
  }
  &.count-clock svg {
    height: 100%;
    width: 100%;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    path {
      fill: $clearWhite;
      fill-opacity: 1;
    }
  }

  &.ng-hide {
    opacity: 0;
  }
}

.scroll, .slide {
  height: 100%;
}

.slide,
.slide .prompt,
.slide .buttons {
  transition: 750ms ease-in-out all;
}

// ng-hide-remove means that 'ng-hide' is being removed
.slide.ng-hide {
  opacity: 0;
}

// starting point
.slide.ng-hide .prompt {
  transform: translateY(25%);
}
.slide.ng-hide .buttons {
  transform: translateX(100%);
}

// ending point
.slide.ng-hide-add .prompt {
  transform: translateY(-25%);
}
.slide.ng-hide-add .buttons {
  transform: translateX(100%);
}


.content {
  display: flex;
  height: 100%;
  width: 100%;
  flex-flow: column;
  align-items: center;
  line-height: 1.2;
}
.prompt {
  flex: 1 1 auto;
  display: flex;
  justify-content: center;
  max-width: 30em;
  width: 100%;
  padding: 0 .5em;
  flex-flow: column;

  .prompt-inner {
    background: $clearWhite;
    transform: rotate(-.2deg);
    padding: .25em .4em;
    display: flex;
    flex-flow: column;
  }

  p {
    transform: rotate(.2deg);
  }

  p:last-child {
    margin-bottom: 0;
  }
}

button {
  box-shadow: -3px -1px 3px rgba(0,0,0,0.1);
  background: $clearWhite;
  border: 0;
  &.activated {
    opacity: 1;
  }
}

.buttons {
  position: relative;
  height: 6em;
  text-align: right;
  width: 100%;
  display: flex;
  flex-flow: column;
  align-items: flex-end;
  justify-content: center;

  button {
    margin-bottom: 10px;
    padding: 0;
    font-size: 28px;

    transform: rotate(.5deg);
    transition: all 100ms;
    transform-origin: top right;
    transform-style: preserve-3D;

    &.activated {
      transform: perspective(80px) rotateY(-1deg) rotateZ(-1deg);
      box-shadow: 0 0 2px rgba(0,0,0,0.1);
    }

    > span {
      padding-right: 1.5em;
      padding-left: 10px;
      position: relative;
    }

    &.active,
    &.activated {
      opacity: 1;
    }
  }

  .breath {
    position: relative;
    z-index: 2;

    $breathRadius: 200px;

    > span {
      background: #fff;
      display: inline-block;
    }

    &:after {
      position: absolute;
      left: 2px;
      top: 4px;
      right: auto;
      bottom: auto;
      transform: translate(-50%, -50%);
      border-radius: $breathRadius * 2;
      width: $breathRadius;
      height: $breathRadius;
      content: "";
      background: #247790;
      transition: all 4s cubic-bezier(0.325, 0.430, 0.765, 0.640);
      z-index: -1;
      box-shadow: 0px 0px 15px 2px rgba(255,255,255,1);
      transform: translate(-50%, -50%) scale(0);
    }

    &.activated {
      &:after {
        transition: all 6s cubic-bezier(0.105, 0.490, 0.695, 0.735);
        transform: translate(-50%, -50%) scale(1);
        box-shadow: inset 0px 0px 15px 2px rgba(0,0,0,0.15);
      }
    }

  }


}
